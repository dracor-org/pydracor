[project]
name = "pydracor"
version = "3.0.3"
description = "Python package which wraps methods from pydracor-base to interact with the DraCor API."
readme = "README.md"
keywords = [
  "API",
  "Corpus",
  "DraCor",
  "Drama",
  "Drama Corpus",
  "pydracor",
  "Wrapper",
]
license = "MIT"
authors = [
  { name = "Henny Sluyter-Gäthje, Eduard Grigoriev", email = "sluytergaeth@uni-potsdam.de" },
]
maintainers = [
  { name = "Henny Sluyter-Gäthje", email = "sluytergaeth@uni-potsdam.de" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Education",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "pydracor-base>=1.0.0",
]
[project.urls]
Repository = "https://github.com/dracor-org/pydracor.git"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.sdist]
include = ["scr/*.py"]
exclude = ["test/*.py"]

[tool.hatch.build.targets.wheel]
include = ["scr/*.py"]
exclude = ["test/*.py"]

[tool.pytest.ini_options]
testpaths = ["test"]
pythonpath = ["src"]

[dependency-groups]
dev = [
    "pytest>=7.4.4",
    "twine>=6.1.0",
]
